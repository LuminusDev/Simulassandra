package utils;

import java.io.File;
import java.util.Scanner;

import simulassandra.client.Config;
import simulassandra.client.app.Command;
import simulassandra.client.exceptions.ArgumentException;

import com.datastax.driver.core.Host;
import com.datastax.driver.core.Metadata;

public class Interactor {
	
	public static void welcome(){
		System.out.println("Simulassandra Client");
	}
	
	private static String basicInput(String msg){
		System.out.print(msg);
		Scanner sc = new Scanner(System.in);
		String r = new String();
		r = sc.nextLine();
		//sc.close();
		return r;
	}
	
	public static String getHostAddress(){
		return basicInput("Please, tip the host address :");
	}
	
	public static Command commandInput() throws ArgumentException{
		System.out.print("> ");
		Scanner sc = new Scanner(System.in);
		Command cmd = new Command(sc.nextLine());
		sc.close();
		return cmd;
	}
	
	public static String getKeySpaceName(){
		return basicInput("Please, tip the keyspace name :");
	}
	
	public static File getDataFile(){
		String pathname =  basicInput("Data file name :");
		File f = new File(pathname);
		
		return f;
	}
	
	public static String getReplicationType(){
		return basicInput("Replication type :");
	}
	
	public static Integer getReplicationFactor() {
		return Integer.parseInt(basicInput("Replication factor :"));
	}
	
	public static void checkingHost(String h){
		System.out.println("Checking if "+h+" host is reachable.");
	}
	
	public static void displayMetadata(Metadata m){
		System.out.printf("Connected to cluster: %s\n", m.getClusterName());
		for ( Host host : m.getAllHosts() ) {
			System.out.printf("Datacenter: %s; Host: %s; Rack: %s\n",
		    host.getDatacenter(), host.getAddress(), host.getRack());
		}
	}
	
	public static void displayMessage(String msg){
		System.out.println(msg);
	}
	
	public static void displayException(Exception e){
		System.out.println("Error > "+e.getMessage());
	}

	public static void end(){
		System.out.println("End");
	}
	
	public static void showCommands(){
		System.out.println("Lists of commands available : ");
		System.out.println("- "+Config.CMD_HELP+" : show this list");
		System.out.println("- "+Config.CMD_IMPORT+" <file> : execute cql queries written in the file");
		System.out.println("- "+Config.CMD_SWITCH_KEYSPACE+" <ks> : switch to keyspace ks");
		System.out.println("- "+Config.CMD_RESET_KEYSPACE+" : Reset data of the current keyspace");
		System.out.println("- "+Config.CMD_QUERIESFACTORY+" <s> : execute queries generated by the seed s on the current keyspace");
		System.out.println("- "+Config.CMD_QUIT+" : quitter le programme");
	}

}
